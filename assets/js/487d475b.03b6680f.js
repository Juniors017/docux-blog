"use strict";(globalThis.webpackChunkdocux_blog=globalThis.webpackChunkdocux_blog||[]).push([[5100],{4413:e=>{e.exports=JSON.parse('{"permalink":"/blog/trees-component-docusaurus","editUrl":"https://github.com/Juniors017/docux-blog/tree/main/blog/2025/10/22/trees/index.mdx","source":"@site/blog/2025/10/22/trees/index.mdx","title":"Component Trees","description":"Create interactive file and folder trees in your Docusaurus pages with the Trees component. Works with or without custom icons.","date":"2025-10-22T00:00:00.000Z","tags":[{"inline":true,"label":"react","permalink":"/blog/tags/react"},{"inline":true,"label":"mdx","permalink":"/blog/tags/mdx"},{"inline":true,"label":"component","permalink":"/blog/tags/component"},{"inline":true,"label":"tree","permalink":"/blog/tags/tree"},{"inline":true,"label":"file-structure","permalink":"/blog/tags/file-structure"},{"inline":true,"label":"Iconify","permalink":"/blog/tags/iconify"}],"readingTime":8.43,"hasTruncateMarker":true,"authors":[{"name":"Docux","title":"Curious explorer, a bit of a mad experimenter, and a bit of a contributor.","url":"https://docuxlab.com","page":{"permalink":"/blog/authors/docux"},"socials":{"github":"https://github.com/Juniors017","bluesky":"https://bsky.app/profile/docuxlab.com"},"bio":"Curious explorer, a bit of a mad experimenter, and a bit of a contributor for Docusaurus. I love creating tools to improve productivity and user experience.\\nAnd sharing my discoveries with the community.\\n","imageURL":"https://avatars.githubusercontent.com/u/97809069?v=4","key":"docux"}],"frontMatter":{"title":"Component Trees","slug":"trees-component-docusaurus","description":"Create interactive file and folder trees in your Docusaurus pages with the Trees component. Works with or without custom icons.","schemaTypes":["HowTo","BlogPosting"],"image":"/img/treesmap.webp","authors":["docux"],"mainTag":"Design","tags":["react","mdx","component","tree","file-structure","Iconify"],"date":"2025-10-22T00:00:00.000Z","difficulty":"intermediate","totalTime":"PT20M","yield":"Interactive tree component for Docusaurus.","genre":"Technical Tutorial","inLanguage":"en","readingTime":"10 min","copyrightYear":2025,"copyrightHolder":"Docux","keywords":["docusaurus","trees component","tree view","file tree","folder structure","react component","mdx"],"hide_table_of_contents":false,"series":"Design your site","blueSkyRecordKey":"3m3razakaxc2j"},"unlisted":false,"prevItem":{"title":"GoatCounter analytics","permalink":"/blog/goatcounter"},"nextItem":{"title":"Plugin Remark Replace Words","permalink":"/blog/remark-replace-words-plugin"}}')},4897:(e,n,s)=>{s.d(n,{A:()=>l});let l=s.p+"assets/images/treesmap-08bfef29786c4c0f9df861aebdb0535c.webp"},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>t});var l=s(6540);let i={},o=l.createContext(i);function r(e){let n=l.useContext(o);return l.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),l.createElement(o.Provider,{value:n},e.children)}},9731:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var l=s(4413),i=s(4848),o=s(8453);let r={title:"Component Trees",slug:"trees-component-docusaurus",description:"Create interactive file and folder trees in your Docusaurus pages with the Trees component. Works with or without custom icons.",schemaTypes:["HowTo","BlogPosting"],image:"/img/treesmap.webp",authors:["docux"],mainTag:"Design",tags:["react","mdx","component","tree","file-structure","Iconify"],date:new Date("2025-10-22T00:00:00.000Z"),difficulty:"intermediate",totalTime:"PT20M",yield:"Interactive tree component for Docusaurus.",genre:"Technical Tutorial",inLanguage:"en",readingTime:"10 min",copyrightYear:2025,copyrightHolder:"Docux",keywords:["docusaurus","trees component","tree view","file tree","folder structure","react component","mdx"],hide_table_of_contents:!1,series:"Design your site",blueSkyRecordKey:"3m3razakaxc2j"},t=void 0,c={authorsImageUrls:[void 0]},d=[{value:"Introduction",id:"introduction",level:2},{value:"\u2728 Key Features",id:"-key-features",level:3},{value:"Installation",id:"installation",level:2},{value:"Copy/Create Files",id:"copycreate-files",level:3},{value:"Component Architecture",id:"component-architecture",level:2},{value:"File <strong><code>Trees/index.js</code></strong>",id:"file-treesindexjs",level:3},{value:"Main Component",id:"main-component",level:4},{value:"<strong><code>Trees/Folder/index.js</code></strong>",id:"treesfolderindexjs",level:3},{value:"Folder Component",id:"folder-component",level:4},{value:"<strong><code>Trees/File/index.js</code></strong>",id:"treesfileindexjs",level:3},{value:"File Component",id:"file-component",level:4},{value:"File <code>Trees/utils/TreeItem.js</code>",id:"file-treesutilstreeitemjs",level:3},{value:"Internal Utility Component",id:"internal-utility-component",level:4},{value:"File <strong><code>styles.module.css</code></strong>",id:"file-stylesmodulecss",level:3},{value:"Component CSS Styles File",id:"component-css-styles-file",level:4},{value:"MDX Integration",id:"mdx-integration",level:2},{value:"Register in MDXComponents",id:"register-in-mdxcomponents",level:3},{value:"Use in Your MDX Files",id:"use-in-your-mdx-files",level:3},{value:"Usage Examples",id:"usage-examples",level:2},{value:"Example 1: Simple Tree with Native Emojis",id:"example-1-simple-tree-with-native-emojis",level:3},{value:"Example 2: Collapsed Folders by Default",id:"example-2-collapsed-folders-by-default",level:3},{value:"Example 3: With LogoIcon Icons (Simple)",id:"example-3-with-logoicon-icons-simple",level:3},{value:"Example 4: Complex Tree with Badges",id:"example-4-complex-tree-with-badges",level:3},{value:"Example 5: Complete Docusaurus Project",id:"example-5-complete-docusaurus-project",level:3},{value:"Component Props",id:"component-props",level:2},{value:"Component <code>&lt;Trees&gt;</code>",id:"component-trees",level:3},{value:"Component <code>&lt;Folder&gt;</code>",id:"component-folder",level:3},{value:"Component <code>&lt;File&gt;</code>",id:"component-file",level:3},{value:"Usage With and Without LogoIcon",id:"usage-with-and-without-logoicon",level:2},{value:"Mode 1: Native Emojis (without LogoIcon)",id:"mode-1-native-emojis-without-logoicon",level:3},{value:"Mode 2: LogoIcon Icons (with Iconify)",id:"mode-2-logoicon-icons-with-iconify",level:3},{value:"Mode 3: No Icon at All",id:"mode-3-no-icon-at-all",level:3},{value:"Dark Mode Support",id:"dark-mode-support",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"\u2705 Do",id:"-do",level:3},{value:"\u274C Don&#39;t",id:"-dont",level:3},{value:"Conclusion",id:"conclusion",level:2}];function a(e){let n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components},{File:l,Folder:r,Snippet:t,Trees:c}=n;return l||p("File",!0),r||p("Folder",!0),t||p("Snippet",!0),c||p("Trees",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)("center",{children:(0,i.jsxs)("div",{children:[(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"https://github.com/Juniors017",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/badge/Developer-Docux-green.svg",alt:"Developer"})}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/Juniors017",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/badge/Development-passed-green.svg",alt:"Development"})}),"\n",(0,i.jsx)(n.a,{href:"https://github.com/Juniors017",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/badge/AI-50%25-blue.svg",alt:"AI 50%"})}),"\n",(0,i.jsx)(n.a,{href:"https://opensource.org/licenses/MIT",children:(0,i.jsx)(n.img,{src:"https://img.shields.io/badge/License-MIT-yellow.svg",alt:"License: MIT"})})]}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:s(4897).A+"",width:"1013",height:"712"})})]})}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Trees"})," component allows you to display ",(0,i.jsx)(n.strong,{children:"interactive file and folder trees"})," directly in your Docusaurus pages. Perfect for documenting project structure, explaining architecture, or presenting code examples."]}),"\n",(0,i.jsxs)(c,{title:"Project with Icons",children:[(0,i.jsxs)(r,{label:"src",icon:"unjs:mkdist",children:[(0,i.jsx)(l,{label:"index.js",icon:"logos:javascript"}),(0,i.jsx)(l,{label:"App.jsx",icon:"logos:react"}),(0,i.jsx)(l,{label:"styles.css",icon:"logos:css-3"})]}),(0,i.jsx)(l,{label:"package.json",icon:"vscode-icons:file-type-node"})]}),"\n","\n",(0,i.jsx)(n.h3,{id:"-key-features",children:"\u2728 Key Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Intuitive syntax"}),": Use natural nested JSX tags"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Collapsible folders"}),": Click to expand/collapse folders"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Two display modes"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Native emojis by default (\u{1F4C1} \u{1F4C4})"}),"\n",(0,i.jsx)(n.li,{children:"Custom icons via LogoIcon (Iconify)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Dark mode"}),": Full dark theme support"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accessible"}),": Keyboard navigation and smooth animations"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Optional badges"}),": Add extra information"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(n.h3,{id:"copycreate-files",children:"Copy/Create Files"}),"\n",(0,i.jsx)(n.p,{children:"Create the following folder structure in your Docusaurus project:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"(Note that I'm intentionally not using my component here, ha ha!)"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"src/components/Trees/\n\u251C\u2500\u2500 index.js              # Main Trees component\n\u251C\u2500\u2500 Folder/\n\u2502   \u2514\u2500\u2500 index.js          # Folder component\n\u251C\u2500\u2500 File/\n\u2502   \u2514\u2500\u2500 index.js          # File component\n\u251C\u2500\u2500 utils/\n\u2502   \u2514\u2500\u2500 TreeItem.js       # Shared internal component\n\u2514\u2500\u2500 styles.module.css     # CSS styles\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The component follows a ",(0,i.jsx)(n.strong,{children:"modular architecture"})," inspired by React best practices"]}),"\n",(0,i.jsx)(n.h2,{id:"component-architecture",children:"Component Architecture"}),"\n",(0,i.jsxs)(n.h3,{id:"file-treesindexjs",children:["File ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Trees/index.js"})})]}),"\n",(0,i.jsx)(n.h4,{id:"main-component",children:"Main Component"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Tree container"}),"\n",(0,i.jsx)(n.li,{children:"Displays an optional title"}),"\n",(0,i.jsx)(n.li,{children:"Manages children rendering (Folder/File)"}),"\n",(0,i.jsx)(n.li,{children:"Applies initial indentation level (0)"}),"\n"]}),"\n",(0,i.jsx)(t,{filename:"src/components/Trees/index.js",source:"src/components/Trees/index.js",code:'import React, { Children, isValidElement } from "react";\nimport PropTypes from "prop-types";\nimport styles from "./styles.module.css";\n\n/**\n * Trees Component - Main component to display a tree structure\n * Uses intuitive JSX syntax with nested tags\n */\nexport default function Trees({ title, children }) {\n  return (\n    <div className={styles.treeContainer}>\n      {title && <h3 className={styles.treeTitle}>{title}</h3>}\n      <div className={styles.treeContent}>\n        {Children.map(children, (child, index) => {\n          if (isValidElement(child)) {\n            return React.cloneElement(child, {\n              key: index,\n              level: 0,\n            });\n          }\n          return null;\n        })}\n      </div>\n    </div>\n  );\n}\n\nTrees.propTypes = {\n  /** Optional tree title */\n  title: PropTypes.string,\n  /** Tree content (Folder and File components) */\n  children: PropTypes.node.isRequired,\n};\n',lang:"javascript"}),"\n",(0,i.jsx)(n.h3,{id:"treesfolderindexjs",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Trees/Folder/index.js"})})}),"\n",(0,i.jsx)(n.h4,{id:"folder-component",children:"Folder Component"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Represents a folder in the tree"}),"\n",(0,i.jsxs)(n.li,{children:["Wrapper around ",(0,i.jsx)(n.code,{children:"TreeItem"})," with ",(0,i.jsx)(n.code,{children:'defaultEmoji="\u{1F4C1}"'})]}),"\n",(0,i.jsx)(n.li,{children:"Can contain children (sub-folders and files)"}),"\n",(0,i.jsxs)(n.li,{children:["Props: ",(0,i.jsx)(n.code,{children:"label"}),", ",(0,i.jsx)(n.code,{children:"icon"}),", ",(0,i.jsx)(n.code,{children:"expanded"}),", ",(0,i.jsx)(n.code,{children:"badge"}),", ",(0,i.jsx)(n.code,{children:"iconSize"})]}),"\n"]}),"\n",(0,i.jsx)(t,{filename:"src/components/Trees/Folder/index.js",source:"src/components/Trees/Folder/index.js",code:'import React from "react";\nimport PropTypes from "prop-types";\nimport TreeItem from "../utils/TreeItem";\n\n/**\n * Folder Component - Represents a folder in the tree structure\n */\nexport default function Folder({ icon, iconSize = 24, badge, label, expanded = false, children, level = 0 }) {\n  return (\n    <TreeItem \n      icon={icon} \n      iconSize={iconSize} \n      badge={badge} \n      label={label}\n      expanded={expanded} \n      level={level}\n      defaultEmoji="\u{1F4C1}"\n    >\n      {children}\n    </TreeItem>\n  );\n}\n\nFolder.propTypes = {\n  /** Icon name (LogoIcon) to display */\n  icon: PropTypes.string,\n  /** Icon size in pixels */\n  iconSize: PropTypes.number,\n  /** Optional badge to display */\n  badge: PropTypes.string,\n  /** Folder name to display */\n  label: PropTypes.string.isRequired,\n  /** Initial state: expanded (true) or collapsed (false) */\n  expanded: PropTypes.bool,\n  /** Folder content (sub-folders and files) */\n  children: PropTypes.node,\n  /** Nesting level (managed automatically) */\n  level: PropTypes.number,\n};\n',lang:"javascript"}),"\n",(0,i.jsx)(n.h3,{id:"treesfileindexjs",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Trees/File/index.js"})})}),"\n",(0,i.jsx)(n.h4,{id:"file-component",children:"File Component"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Represents a file in the tree"}),"\n",(0,i.jsxs)(n.li,{children:["Wrapper around ",(0,i.jsx)(n.code,{children:"TreeItem"})," with ",(0,i.jsx)(n.code,{children:'defaultEmoji="\u{1F4C4}"'})]}),"\n",(0,i.jsx)(n.li,{children:"Cannot contain children"}),"\n",(0,i.jsxs)(n.li,{children:["Props: ",(0,i.jsx)(n.code,{children:"label"}),", ",(0,i.jsx)(n.code,{children:"icon"}),", ",(0,i.jsx)(n.code,{children:"badge"}),", ",(0,i.jsx)(n.code,{children:"iconSize"})]}),"\n"]}),"\n",(0,i.jsx)(t,{filename:"src/components/Trees/File/index.js",source:"src/components/Trees/File/index.js",code:'import React from "react";\nimport PropTypes from "prop-types";\nimport TreeItem from "../utils/TreeItem";\n\n/**\n * File Component - Represents a file in the tree structure\n */\nexport default function File({ icon, iconSize = 20, badge, label, level = 0 }) {\n  return (\n    <TreeItem \n      icon={icon} \n      iconSize={iconSize} \n      badge={badge} \n      label={label}\n      expanded={false} \n      level={level}\n      defaultEmoji="\u{1F4C4}"\n    />\n  );\n}\n\nFile.propTypes = {\n  /** Icon name (LogoIcon) to display */\n  icon: PropTypes.string,\n  /** Icon size in pixels */\n  iconSize: PropTypes.number,\n  /** Optional badge to display */\n  badge: PropTypes.string,\n  /** File name to display */\n  label: PropTypes.string.isRequired,\n  /** Nesting level (managed automatically) */\n  level: PropTypes.number,\n};\n',lang:"javascript"}),"\n",(0,i.jsxs)(n.h3,{id:"file-treesutilstreeitemjs",children:["File ",(0,i.jsx)(n.code,{children:"Trees/utils/TreeItem.js"})]}),"\n",(0,i.jsx)(n.h4,{id:"internal-utility-component",children:"Internal Utility Component"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Shared component"})," that factors all common logic:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u2705 Expansion state management (",(0,i.jsx)(n.code,{children:"useState"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Valid React children detection"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Icon display (LogoIcon or native emojis)"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Recursive sub-element rendering"}),"\n",(0,i.jsxs)(n.li,{children:["\u2705 Dynamic indentation calculation (",(0,i.jsx)(n.code,{children:"level * 20px"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"\u2705 User interaction (click to expand/collapse)"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Icon display logic"}),":"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"icon"})," is provided \u2192 Uses LogoIcon (Iconify)"]}),"\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"icon"})," is absent \u2192 Uses ",(0,i.jsx)(n.code,{children:"defaultEmoji"})," (\u{1F4C1} or \u{1F4C4})"]}),"\n",(0,i.jsxs)(n.li,{children:["If ",(0,i.jsx)(n.code,{children:"icon={null}"})," \u2192 No icon"]}),"\n"]}),"\n",(0,i.jsx)(t,{filename:"src/components/Trees/utils/TreeItem.js",source:"src/components/Trees/utils/TreeItem.js",code:'import React, { useState, Children, isValidElement } from "react";\nimport styles from "../styles.module.css";\nimport LogoIcon from "../../LogoIcon";\n\n/**\n * TreeItem Component - Represents an individual tree element\n * Internal component shared by Folder and File\n */\nexport default function TreeItem({ icon, iconSize = 24, badge, label, expanded = false, children, level = 0, defaultEmoji }) {\n  const [isExpanded, setIsExpanded] = useState(expanded);\n  \n  // Filter valid React children (other Folder or File)\n  const childElements = Children.toArray(children).filter(child => isValidElement(child));\n  const hasChildren = childElements.length > 0;\n\n  const toggleExpand = () => {\n    if (hasChildren) {\n      setIsExpanded(!isExpanded);\n    }\n  };\n\n  return (\n    <div className={styles.treeNode}>\n      <div\n        className={`${styles.nodeContent} ${hasChildren ? styles.hasChildren : ""}`}\n        style={{ paddingLeft: `${level * 20}px` }}\n        onClick={toggleExpand}\n      >\n        {/* Expand/collapse icon */}\n        {hasChildren && (\n          <span className={styles.expandIcon}>\n            {isExpanded ? "\u25BC" : "\u25B6"}\n          </span>\n        )}\n\n        {/* Node icon with label (via LogoIcon or native emoji) */}\n        {icon ? (\n          <span className={styles.nodeIcon}>\n            <LogoIcon name={icon} size={iconSize} />\n            <span className={styles.nodeLabel}>{label}</span>\n          </span>\n        ) : defaultEmoji ? (\n          <span className={styles.nodeIcon}>\n            <span style={{ fontSize: `${iconSize}px`, lineHeight: 1 }}>{defaultEmoji}</span>\n            <span className={styles.nodeLabel}>{label}</span>\n          </span>\n        ) : (\n          <span className={styles.nodeLabel}>{label}</span>\n        )}\n\n        {/* Optional badge */}\n        {badge && (\n          <span className={styles.nodeBadge}>{badge}</span>\n        )}\n      </div>\n\n      {/* Children (recursive) */}\n      {hasChildren && isExpanded && (\n        <div className={styles.nodeChildren}>\n          {childElements.map((child, index) =>\n            React.cloneElement(child, {\n              key: index,\n              level: level + 1,\n            })\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n',lang:"javascript"}),"\n",(0,i.jsxs)(n.h3,{id:"file-stylesmodulecss",children:["File ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"styles.module.css"})})]}),"\n",(0,i.jsx)(n.h4,{id:"component-css-styles-file",children:"Component CSS Styles File"}),"\n",(0,i.jsx)(n.p,{children:"Single CSS shared by all components with:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"CSS variables for colors and spacing"}),"\n",(0,i.jsxs)(n.li,{children:["Dark mode support (",(0,i.jsx)(n.code,{children:"[data-theme='dark']"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"Smooth animations for transitions"}),"\n",(0,i.jsxs)(n.li,{children:["Modular classes (",(0,i.jsx)(n.code,{children:".treeContainer"}),", ",(0,i.jsx)(n.code,{children:".nodeContent"}),", etc.)"]}),"\n"]}),"\n",(0,i.jsx)(t,{filename:"src/components/Trees/styles.module.css",source:"src/components/Trees/styles.module.css",code:".treeContainer {\n  border: 1px solid var(--ifm-color-emphasis-300);\n  border-radius: 3px;\n  padding: 16px;\n  margin: 20px 0;\n  background-color: var(--ifm-background-surface-color);\n}\n\n.treeTitle {\n  margin: 0 0 16px 0;\n  font-size: 1.2rem;\n  font-weight: 600;\n  color: var(--ifm-color-primary);\n  border-bottom: 2px solid var(--ifm-color-emphasis-300);\n  padding-bottom: 8px;\n}\n\n.treeContent {\n  font-family: var(--ifm-font-family-monospace);\n}\n\n.treeNode {\n  margin: 0;\n  position: relative;\n}\n\n.nodeContent {\n  display: flex;\n  align-items: center;\n  padding: 6px 8px;\n  padding-left: 8px;\n  border-radius: 4px;\n  transition: background-color 0.2s ease;\n  cursor: default;\n  position: relative;\n}\n\n.nodeContent.hasChildren {\n  cursor: pointer;\n}\n\n.nodeContent:hover {\n  background-color: var(--ifm-color-emphasis-100);\n}\n\n.expandIcon {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 20px;\n  min-width: 20px;\n  height: 20px;\n  margin-right: 4px;\n  font-size: 10px;\n  color: var(--ifm-color-emphasis-600);\n  transition: transform 0.2s ease;\n  user-select: none;\n  flex-shrink: 0;\n}\n\n.nodeIcon {\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  flex: 1;\n  gap: 8px;\n}\n\n/* Add offset for files (without expandIcon) for alignment */\n.nodeContent:not(.hasChildren) .nodeIcon {\n  margin-left: 24px;\n}\n\n.nodeLabel {\n  font-size: 0.95rem;\n  color: var(--ifm-color-content);\n  user-select: none;\n  line-height: 1;\n  white-space: nowrap;\n}\n\n.nodeBadge {\n  display: inline-flex;\n  align-items: center;\n  padding: 2px 8px;\n  font-size: 0.75rem;\n  font-weight: 600;\n  border-radius: 12px;\n  background-color: var(--ifm-color-primary);\n  color: white;\n  user-select: none;\n}\n\n.nodeChildren {\n  margin-left: 20px;\n  border-left: 1px solid var(--ifm-color-emphasis-300);\n  padding-left: 8px;\n  animation: slideDown 0.2s ease-out;\n}\n\n@keyframes slideDown {\n  from {\n    opacity: 0;\n    transform: translateY(-4px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* Dark mode styles */\n[data-theme='dark'] .treeContainer {\n  border-color: var(--ifm-color-emphasis-300);\n  background-color: var(--ifm-background-surface-color);\n}\n\n[data-theme='dark'] .nodeContent:hover {\n  background-color: var(--ifm-color-emphasis-200);\n}\n\n[data-theme='dark'] .nodeLabel {\n  color: var(--ifm-color-content);\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .treeContainer {\n    padding: 12px;\n  }\n\n  .nodeLabel {\n    font-size: 0.9rem;\n  }\n\n  .nodeIcon {\n    transform: scale(0.9);\n  }\n}\n",lang:"css"}),"\n",(0,i.jsx)(n.h2,{id:"mdx-integration",children:"MDX Integration"}),"\n",(0,i.jsx)(n.h3,{id:"register-in-mdxcomponents",children:"Register in MDXComponents"}),"\n",(0,i.jsxs)(n.p,{children:["Open the file ",(0,i.jsx)(n.code,{children:"src/theme/MDXComponents.js"})," and add the imports:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",metastring:'title="src/theme/MDXComponents.js"',children:"import React from 'react';\nimport MDXComponents from '@theme-original/MDXComponents';\nimport Trees from '@site/src/components/Trees';\nimport Folder from '@site/src/components/Trees/Folder';\nimport File from '@site/src/components/Trees/File';\n\nexport default {\n  ...MDXComponents,\n  Trees,\n  Folder,\n  File\n};\n"})}),"\n",(0,i.jsx)(n.h3,{id:"use-in-your-mdx-files",children:"Use in Your MDX Files"}),"\n",(0,i.jsxs)(n.p,{children:["Once registered in MDXComponents, the components are ",(0,i.jsx)(n.strong,{children:"automatically available"})," in all your ",(0,i.jsx)(n.code,{children:".mdx"})," files:\n",(0,i.jsx)(n.a,{href:"https://docusaurus.io/docs/markdown-features/react#mdx-component-scope",children:"See official documentation"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-mdx",metastring:'title="blog/my-article.mdx"',children:'## Project Structure\n\n<Trees title="My Project">\n  <Folder label="src">\n    <File label="index.js" />\n    <File label="App.jsx" />\n  </Folder>\n  <File label="package.json" />\n</Trees>\n'})}),"\n",(0,i.jsx)(n.h2,{id:"usage-examples",children:"Usage Examples"}),"\n",(0,i.jsx)(n.h3,{id:"example-1-simple-tree-with-native-emojis",children:"Example 1: Simple Tree with Native Emojis"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Without LogoIcon icons"}),", the component automatically uses native emojis (\u{1F4C1} for folders, \u{1F4C4} for files)."]}),"\n",(0,i.jsxs)(c,{title:"Simple Project",children:[(0,i.jsxs)(r,{label:"src",expanded:!0,children:[(0,i.jsx)(l,{label:"index.js"}),(0,i.jsx)(l,{label:"App.jsx"})]}),(0,i.jsx)(r,{label:"public",expanded:!0,children:(0,i.jsx)(l,{label:"index.html"})}),(0,i.jsx)(l,{label:"package.json"}),(0,i.jsx)(l,{label:"README.md"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Trees title="Simple Project">\n  <Folder label="src" expanded={true}>\n    <File label="index.js" />\n    <File label="App.jsx" />\n  </Folder>\n  <Folder label="public" expanded={true}>\n    <File label="index.html" />\n  </Folder>\n  <File label="package.json" />\n  <File label="README.md" />\n</Trees>\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"example-2-collapsed-folders-by-default",children:"Example 2: Collapsed Folders by Default"}),"\n",(0,i.jsxs)(n.p,{children:["Use the ",(0,i.jsx)(n.code,{children:"expanded={false}"})," prop to have folders collapsed on load."]}),"\n",(0,i.jsxs)(c,{title:"Compact Tree",children:[(0,i.jsxs)(r,{label:"node_modules",expanded:!1,children:[(0,i.jsx)(r,{label:"react",children:(0,i.jsx)(l,{label:"index.js"})}),(0,i.jsx)(r,{label:"react-dom",children:(0,i.jsx)(l,{label:"index.js"})})]}),(0,i.jsx)(r,{label:"src",children:(0,i.jsx)(l,{label:"App.jsx"})})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Trees title="Compact Tree">\n  <Folder label="node_modules" expanded={false}>\n    <Folder label="react">\n      <File label="index.js" />\n    </Folder>\n  </Folder>\n  <Folder label="src">\n    <File label="App.jsx" />\n  </Folder>\n</Trees>\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"example-3-with-logoicon-icons-simple",children:"Example 3: With LogoIcon Icons (Simple)"}),"\n",(0,i.jsxs)(n.p,{children:["Add the ",(0,i.jsx)(n.code,{children:"icon"})," prop to use ",(0,i.jsx)(n.a,{href:"https://icon-sets.iconify.design/",children:"Iconify"})," icons via ",(0,i.jsx)(n.a,{href:"/blog/logoicon-component-docusaurus/",children:"LogoIcon"}),"."]}),"\n",(0,i.jsxs)(c,{title:"Project with Icons",children:[(0,i.jsxs)(r,{label:"src",icon:"unjs:mkdist",children:[(0,i.jsx)(l,{label:"index.js",icon:"logos:javascript"}),(0,i.jsx)(l,{label:"App.jsx",icon:"logos:react"}),(0,i.jsx)(l,{label:"styles.css",icon:"logos:css-3"})]}),(0,i.jsx)(l,{label:"package.json",icon:"vscode-icons:file-type-node"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Trees title="Project with Icons">\n  <Folder label="src" icon="unjs:mkdist">\n    <File label="index.js" icon="logos:javascript" />\n    <File label="App.jsx" icon="logos:react" />\n    <File label="styles.css" icon="logos:css-3" />\n  </Folder>\n  <File label="package.json" icon="vscode-icons:file-type-node" />\n</Trees>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"example-4-complex-tree-with-badges",children:"Example 4: Complex Tree with Badges"}),"\n",(0,i.jsxs)(n.p,{children:["Use the ",(0,i.jsx)(n.code,{children:"badge"})," prop to display additional information."]}),"\n",(0,i.jsxs)(c,{title:"Backend Architecture",children:[(0,i.jsxs)(r,{label:"src",icon:"vscode-icons:default-folder",children:[(0,i.jsxs)(r,{label:"controllers",icon:"vscode-icons:folder-type-controller",badge:"5 files",children:[(0,i.jsx)(l,{label:"userController.js",icon:"vscode-icons:file-type-js"}),(0,i.jsx)(l,{label:"authController.js",icon:"vscode-icons:file-type-js"}),(0,i.jsx)(l,{label:"productController.js",icon:"vscode-icons:file-type-js"})]}),(0,i.jsxs)(r,{label:"models",icon:"vscode-icons:folder-type-model",badge:"3 files",children:[(0,i.jsx)(l,{label:"User.js",icon:"vscode-icons:file-type-js"}),(0,i.jsx)(l,{label:"Product.js",icon:"vscode-icons:file-type-js"})]}),(0,i.jsx)(r,{label:"routes",icon:"vscode-icons:folder-type-route",children:(0,i.jsx)(l,{label:"api.js",icon:"vscode-icons:file-type-js"})}),(0,i.jsx)(l,{label:"server.js",icon:"vscode-icons:file-type-node",badge:"main"})]}),(0,i.jsx)(r,{label:"tests",icon:"vscode-icons:folder-type-test",expanded:!1,children:(0,i.jsx)(l,{label:"user.test.js",icon:"vscode-icons:file-type-testjs"})}),(0,i.jsx)(l,{label:".env",icon:"vscode-icons:file-type-dotenv"}),(0,i.jsx)(l,{label:"package.json",icon:"vscode-icons:file-type-node"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Trees title="Backend Architecture">\n  <Folder label="src" icon="vscode-icons:default-folder">\n    <Folder label="controllers" icon="vscode-icons:folder-type-controller" badge="5 files">\n      <File label="userController.js" icon="vscode-icons:file-type-js" />\n      <File label="authController.js" icon="vscode-icons:file-type-js" />\n    </Folder>\n    <Folder label="models" icon="vscode-icons:folder-type-model" badge="3 files">\n      <File label="User.js" icon="vscode-icons:file-type-js" />\n    </Folder>\n    <File label="server.js" icon="vscode-icons:file-type-node" badge="main" />\n  </Folder>\n  <File label=".env" icon="vscode-icons:file-type-dotenv" />\n</Trees>\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"example-5-complete-docusaurus-project",children:"Example 5: Complete Docusaurus Project"}),"\n",(0,i.jsx)(n.p,{children:"Realistic example of a Docusaurus structure."}),"\n",(0,i.jsxs)(c,{title:"Docusaurus Project",children:[(0,i.jsxs)(r,{label:"blog",icon:"vscode-icons:folder-type-docs",children:[(0,i.jsx)(r,{label:"2025",icon:"vscode-icons:default-folder",children:(0,i.jsx)(r,{label:"10",icon:"vscode-icons:default-folder",children:(0,i.jsx)(l,{label:"index.mdx",icon:"vscode-icons:file-type-mdx"})})}),(0,i.jsx)(l,{label:"authors.yml",icon:"vscode-icons:file-type-yaml"})]}),(0,i.jsx)(r,{label:"docs",icon:"vscode-icons:folder-type-docs",children:(0,i.jsx)(l,{label:"intro.md",icon:"vscode-icons:file-type-markdown"})}),(0,i.jsxs)(r,{label:"src",icon:"vscode-icons:default-folder",children:[(0,i.jsx)(r,{label:"components",icon:"vscode-icons:folder-type-component",children:(0,i.jsxs)(r,{label:"Trees",icon:"vscode-icons:default-folder",badge:"new",children:[(0,i.jsx)(l,{label:"index.js",icon:"vscode-icons:file-type-reactjs"}),(0,i.jsx)(l,{label:"styles.module.css",icon:"vscode-icons:file-type-css"})]})}),(0,i.jsx)(r,{label:"pages",icon:"vscode-icons:folder-type-route",children:(0,i.jsx)(l,{label:"index.js",icon:"vscode-icons:file-type-reactjs"})})]}),(0,i.jsx)(r,{label:"static",icon:"vscode-icons:folder-type-public",children:(0,i.jsx)(r,{label:"img",icon:"vscode-icons:folder-type-images",children:(0,i.jsx)(l,{label:"logo.svg",icon:"vscode-icons:file-type-svg"})})}),(0,i.jsx)(l,{label:"docusaurus.config.js",icon:"vscode-icons:file-type-docusaurus"}),(0,i.jsx)(l,{label:"package.json",icon:"vscode-icons:file-type-node"}),(0,i.jsx)(l,{label:"sidebars.js",icon:"vscode-icons:file-type-js"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Trees title="Docusaurus Project">\n  <Folder label="blog" icon="vscode-icons:folder-type-docs">\n    <Folder label="2025" icon="vscode-icons:default-folder">\n      <File label="index.mdx" icon="vscode-icons:file-type-mdx" />\n    </Folder>\n  </Folder>\n  <Folder label="src" icon="vscode-icons:default-folder">\n    <Folder label="components" icon="vscode-icons:folder-type-component">\n      <Folder label="Trees" icon="vscode-icons:default-folder" badge="new">\n        <File label="index.js" icon="vscode-icons:file-type-reactjs" />\n      </Folder>\n    </Folder>\n  </Folder>\n  <File label="docusaurus.config.js" icon="vscode-icons:file-type-docusaurus" />\n</Trees>\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"component-props",children:"Component Props"}),"\n",(0,i.jsxs)(n.h3,{id:"component-trees",children:["Component ",(0,i.jsx)(n.code,{children:"<Trees>"})]}),"\n",(0,i.jsx)("center",{children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Prop"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"title"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Optional tree title"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"children"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"node"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Content (Folder and File components)"})]})]})]})}),"\n",(0,i.jsxs)(n.h3,{id:"component-folder",children:["Component ",(0,i.jsx)(n.code,{children:"<Folder>"})]}),"\n",(0,i.jsx)("center",{children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Prop"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"label"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsxs)(n.td,{children:["\u274C ",(0,i.jsx)(n.strong,{children:"Required"})]}),(0,i.jsx)(n.td,{children:"Folder name"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"icon"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Iconify icon name (via LogoIcon)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"iconSize"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"24"})}),(0,i.jsx)(n.td,{children:"Icon size in pixels"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"badge"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Optional badge to display"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"expanded"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"boolean"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"false"})}),(0,i.jsx)(n.td,{children:"Initial state (expanded/collapsed)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"children"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"node"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Sub-folders and files"})]})]})]})}),"\n",(0,i.jsxs)(n.h3,{id:"component-file",children:["Component ",(0,i.jsx)(n.code,{children:"<File>"})]}),"\n",(0,i.jsx)("center",{children:(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Prop"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"label"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsxs)(n.td,{children:["\u274C ",(0,i.jsx)(n.strong,{children:"Required"})]}),(0,i.jsx)(n.td,{children:"File name"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"icon"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Iconify icon name (via LogoIcon)"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"iconSize"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"number"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"20"})}),(0,i.jsx)(n.td,{children:"Icon size in pixels"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"badge"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"Optional badge to display"})]})]})]})}),"\n",(0,i.jsx)(n.h2,{id:"usage-with-and-without-logoicon",children:"Usage With and Without LogoIcon"}),"\n",(0,i.jsx)(n.h3,{id:"mode-1-native-emojis-without-logoicon",children:"Mode 1: Native Emojis (without LogoIcon)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Advantages"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 No external dependencies"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Works immediately"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Lightweight and performant"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Trees title="Simple">\n  <Folder label="Documents">\n    <File label="report.pdf" />\n  </Folder>\n</Trees>\n'})}),"\n",(0,i.jsx)(n.p,{children:"Result: \u{1F4C1} Documents / \u{1F4C4} report.pdf"}),"\n",(0,i.jsx)(n.h3,{id:"mode-2-logoicon-icons-with-iconify",children:"Mode 2: LogoIcon Icons (with Iconify)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Prerequisites"}),": Have the LogoIcon component installed in your project."]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Advantages"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 Specific icons by file type"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Over 150,000 icons available"}),"\n",(0,i.jsx)(n.li,{children:"\u2705 Professional rendering"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<Trees title="With Icons">\n  <Folder label="src" icon="vscode-icons:default-folder">\n    <File label="App.jsx" icon="vscode-icons:file-type-reactjs" />\n  </Folder>\n</Trees>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"mode-3-no-icon-at-all",children:"Mode 3: No Icon at All"}),"\n",(0,i.jsxs)(n.p,{children:["Pass ",(0,i.jsx)(n.code,{children:"icon={null}"})," to completely disable icons."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'<File label="file.txt" icon={null} />\n'})}),"\n",(0,i.jsx)(n.h2,{id:"dark-mode-support",children:"Dark Mode Support"}),"\n",(0,i.jsxs)(n.p,{children:["The component automatically supports Docusaurus ",(0,i.jsx)(n.strong,{children:"dark mode"})," through CSS variables:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-css",children:"/* Light mode */\n.nodeContent {\n  background-color: var(--ifm-background-surface-color);\n  color: var(--ifm-font-color-base);\n}\n\n/* Dark mode (automatic) */\n[data-theme='dark'] .nodeContent:hover {\n  background-color: rgba(255, 255, 255, 0.05);\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsx)(n.h3,{id:"-do",children:"\u2705 Do"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use ",(0,i.jsx)(n.code,{children:"expanded={false}"})," for large folders (e.g., ",(0,i.jsx)(n.code,{children:"node_modules"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"Add badges for important information"}),"\n",(0,i.jsx)(n.li,{children:"Use consistent icons (same Iconify pack)"}),"\n",(0,i.jsx)(n.li,{children:"Limit depth to 4-5 levels maximum"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"-dont",children:"\u274C Don't"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Don't create overly deep trees (readability)"}),"\n",(0,i.jsx)(n.li,{children:"Avoid mixing native emojis and LogoIcon in the same tree"}),"\n",(0,i.jsx)(n.li,{children:"Don't overuse badges (visual pollution)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.strong,{children:"Trees"})," component offers a ",(0,i.jsx)(n.strong,{children:"simple and flexible"})," solution for displaying trees in Docusaurus:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Two modes"}),": native emojis or custom icons"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Interactive"}),": collapsible/expandable folders"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Dark mode"})," natively supported"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Accessible"})," and performant"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Modular architecture"})," easy to maintain"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Perfect for"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Documenting project structures"}),"\n",(0,i.jsx)(n.li,{children:"Presenting file architectures"}),"\n",(0,i.jsx)(n.li,{children:"Creating installation guides"}),"\n",(0,i.jsx)(n.li,{children:"Illustrating code examples"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Try it in your next article and let me know your feedback! \u{1F680}"})]})}function h(e={}){let{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}function p(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}}}]);