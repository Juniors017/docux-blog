"use strict";(globalThis.webpackChunkdocux_blog=globalThis.webpackChunkdocux_blog||[]).push([[7214],{3698:e=>{e.exports=JSON.parse('{"permalink":"/blog/card-component-docusaurus-infima","editUrl":"https://github.com/Juniors017/docux-blog/tree/main/blog/2025/09/07/card/index.mdx","source":"@site/blog/2025/09/07/card/index.mdx","title":"Component Card","description":"A complete tutorial to create customizable card components in Docusaurus using the Infima CSS framework. Includes React implementation, multiple card variants, and responsive design.","date":"2025-09-07T00:00:00.000Z","tags":[{"inline":true,"label":"card","permalink":"/blog/tags/card"},{"inline":true,"label":"infima","permalink":"/blog/tags/infima"},{"inline":true,"label":"component","permalink":"/blog/tags/component"},{"inline":true,"label":"tutorial","permalink":"/blog/tags/tutorial"},{"inline":true,"label":"front-end","permalink":"/blog/tags/front-end"},{"inline":true,"label":"css","permalink":"/blog/tags/css"},{"inline":true,"label":"design","permalink":"/blog/tags/design"}],"readingTime":23.68,"hasTruncateMarker":true,"authors":[{"name":"Docux","title":"Curious explorer, a bit of a mad experimenter, and a bit of a contributor.","url":"https://docuxlab.com","page":{"permalink":"/blog/authors/docux"},"socials":{"github":"https://github.com/Juniors017","bluesky":"https://bsky.app/profile/docuxlab.com"},"bio":"Curious explorer, a bit of a mad experimenter, and a bit of a contributor for Docusaurus. I love creating tools to improve productivity and user experience.\\nAnd sharing my discoveries with the community.\\n","imageURL":"https://avatars.githubusercontent.com/u/97809069?v=4","key":"docux"}],"frontMatter":{"title":"Component Card","description":"A complete tutorial to create customizable card components in Docusaurus using the Infima CSS framework. Includes React implementation, multiple card variants, and responsive design.","schemaTypes":["HowTo","BlogPosting"],"slug":"card-component-docusaurus-infima","image":"/img/card-component-docusaurus-infima.webp","authors":["docux"],"mainTag":"infima","tags":["card","infima","component","tutorial","front-end","css","design"],"date":"2025-09-07T00:00:00.000Z","last_update":{"date":"2025-09-07T00:00:00.000Z","author":"docux"},"difficulty":"Beginner","totalTime":"PT25M","prepTime":"PT5M","performTime":"PT20M","estimatedCost":"Free","tool":["React","Docusaurus","CSS","VSCode","Infima"],"supply":["Node.js","Docusaurus","React","Infima CSS"],"yield":"Customizable and reusable Card component system","genre":"Technical Tutorial","inLanguage":"en","isAccessibleForFree":true,"readingTime":"15 min","articleSection":"Tutorial","copyrightYear":2025,"copyrightHolder":"Docux","category":"Web Development","keywords":["docusaurus","react","card","infima","component","tutorial","front-end","css","ui","design"],"hide_table_of_contents":false,"series":"infima components","blueSkyRecordKey":"3lycislui2c2a"},"unlisted":false,"prevItem":{"title":"Plugin Simple Analytics","permalink":"/blog/simple-analytics-plugin-docusaurus"},"nextItem":{"title":"Component ImageOnClick","permalink":"/blog/imageonclick-component-docusaurus-lightbox"}}')},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(6540);let r={},s=a.createContext(r);function o(e){let n=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),a.createElement(s.Provider,{value:n},e.children)}},9577:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var a=t(3698),r=t(4848),s=t(8453);let o={title:"Component Card",description:"A complete tutorial to create customizable card components in Docusaurus using the Infima CSS framework. Includes React implementation, multiple card variants, and responsive design.",schemaTypes:["HowTo","BlogPosting"],slug:"card-component-docusaurus-infima",image:"/img/card-component-docusaurus-infima.webp",authors:["docux"],mainTag:"infima",tags:["card","infima","component","tutorial","front-end","css","design"],date:new Date("2025-09-07T00:00:00.000Z"),last_update:{date:new Date("2025-09-07T00:00:00.000Z"),author:"docux"},difficulty:"Beginner",totalTime:"PT25M",prepTime:"PT5M",performTime:"PT20M",estimatedCost:"Free",tool:["React","Docusaurus","CSS","VSCode","Infima"],supply:["Node.js","Docusaurus","React","Infima CSS"],yield:"Customizable and reusable Card component system",genre:"Technical Tutorial",inLanguage:"en",isAccessibleForFree:!0,readingTime:"15 min",articleSection:"Tutorial",copyrightYear:2025,copyrightHolder:"Docux",category:"Web Development",keywords:["docusaurus","react","card","infima","component","tutorial","front-end","css","ui","design"],hide_table_of_contents:!1,series:"infima components",blueSkyRecordKey:"3lycislui2c2a"},i=void 0,c={authorsImageUrls:[void 0]},l=[{value:"Card : composition of the master folder",id:"card--composition-of-the-master-folder",level:3},{value:"Creating the Card component",id:"creating-the-card-component",level:2},{value:"Creating the CardHeader component",id:"creating-the-cardheader-component",level:2},{value:"Creating the CardBody component",id:"creating-the-cardbody-component",level:2},{value:"Creating the CardImage component",id:"creating-the-cardimage-component",level:2},{value:"Creating the CardFooter component",id:"creating-the-cardfooter-component",level:2},{value:"MDX Component Scope",id:"mdx-component-scope",level:2},{value:"Using the Cards Component in an MDX File",id:"using-the-cards-component-in-an-mdx-file",level:2},{value:"Basic card",id:"basic-card",level:3},{value:"Feed card",id:"feed-card",level:3},{value:"Mega Feed card",id:"mega-feed-card",level:3},{value:"Photo card",id:"photo-card",level:3},{value:"Photo card Avatar",id:"photo-card-avatar",level:3},{value:"Other Post card",id:"other-post-card",level:3},{value:"Multi demo card",id:"multi-demo-card",level:3},{value:"Why truncate in styles.module.css",id:"why-truncate-in-stylesmodulecss",level:2},{value:"Detailed CSS Properties Explanation:",id:"detailed-css-properties-explanation",level:3},{value:"1. <strong><code>display: -webkit-box;</code></strong>",id:"1-display--webkit-box",level:4},{value:"2. <strong><code>-webkit-line-clamp: 3;</code> and <code>line-clamp: 3;</code></strong>",id:"2--webkit-line-clamp-3-and-line-clamp-3",level:4},{value:"3. <strong><code>-webkit-box-orient: vertical;</code></strong>",id:"3--webkit-box-orient-vertical",level:4},{value:"4. <strong><code>overflow: hidden;</code></strong>",id:"4-overflow-hidden",level:4},{value:"5. <strong><code>text-overflow: ellipsis;</code></strong>",id:"5-text-overflow-ellipsis",level:4},{value:"6. <strong><code>margin-bottom: 0;</code></strong>",id:"6-margin-bottom-0",level:4},{value:"7. <strong><code>word-wrap: break-word;</code></strong>",id:"7-word-wrap-break-word",level:4},{value:"8. <strong><code>max-height: 4.5em;</code> and <code>line-height: 1.5em;</code></strong>",id:"8-max-height-45em-and-line-height-15em",level:4},{value:"Why Target <code>.truncate p</code>?",id:"why-target-truncate-p",level:3},{value:"basic Example:",id:"basic-example",level:3},{value:"Tricks and Tips",id:"tricks-and-tips",level:2}];function d(e){let n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components},{Card:a,CardBody:o,CardFooter:i,CardHeader:c,CardImage:l,LogoIcon:d,TabItem:m,Tabs:u}=n;return a||h("Card",!0),o||h("CardBody",!0),i||h("CardFooter",!0),c||h("CardHeader",!0),l||h("CardImage",!0),d||h("LogoIcon",!0),m||h("TabItem",!0),u||h("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)("center",{children:(0,r.jsxs)("div",{children:[(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/Juniors017",children:(0,r.jsx)(n.img,{src:"https://img.shields.io/badge/Developer-Docux-green.svg",alt:"Developer"})}),"\n",(0,r.jsx)(n.a,{href:"https://github.com/Juniors017",children:(0,r.jsx)(n.img,{src:"https://img.shields.io/badge/Developement-validated-green.svg",alt:"Developement"})}),"\n",(0,r.jsx)(n.a,{href:"https://opensource.org/licenses/MIT",children:(0,r.jsx)(n.img,{src:"https://img.shields.io/badge/License-MIT-yellow.svg",alt:"License: MIT"})}),"\n",(0,r.jsx)(n.a,{href:"https://github.com/Juniors017",children:(0,r.jsx)(n.img,{src:"https://img.shields.io/badge/AI-no-blue.svg",alt:"AI 0%"})})]}),(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:t(9596).A+"",width:"1191",height:"781"})})]})}),"\n",(0,r.jsxs)(n.p,{children:["With ",(0,r.jsx)(n.a,{href:"https://infima.dev/",children:"Infima CSS framework"}),", I\u2019ve created a reusable card component that you can use on your Docusaurus site. With it, you\u2019ll be able to customize each card with different colors and sizes. This component allows you to generate all the cards available in Infima as well as \u201CCustom\u201D cards, and you\u2019ll be able to create and personalize each card independently."]}),"\n",(0,r.jsx)(n.p,{children:"The component is in fact a set of small components that will admit to form the cards."}),"\n",(0,r.jsx)(n.h3,{id:"card--composition-of-the-master-folder",children:"Card : composition of the master folder"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Card component index.js (The container of alls parts)"}),"\n",(0,r.jsx)(n.li,{children:"CardHeader component (Header parts of cards)"}),"\n",(0,r.jsx)(n.li,{children:"CardBody component (Body parts of cards)"}),"\n",(0,r.jsx)(n.li,{children:"CardImage component (Image cover parts of cards)"}),"\n",(0,r.jsx)(n.li,{children:"CardFooter component (Footer parts of cards)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"We will discover that it pairs wonderfully with other components present in our library but this will be the subject of a dedicated page."}),"\n",(0,r.jsx)(n.h2,{id:"creating-the-card-component",children:"Creating the Card component"}),"\n",(0,r.jsx)(n.admonition,{title:"Publication",type:"note",children:(0,r.jsxs)(n.p,{children:["This article was originally published by DocuxLab on the ",(0,r.jsx)(n.a,{href:"https://community.docusaurus.io",children:"Docusaurus Community"})," and is republished here with new examples."]})}),"\n",(0,r.jsx)(n.p,{children:"Think of this component as the container of all card parts"}),"\n",(0,r.jsxs)(n.p,{children:["First we will create the master folder in:  ",(0,r.jsx)(n.code,{children:"\\src\\components\\Card\\"}),". Next we will start by creating a new component called Card. It will be the container component of our different parts to come. Also this will give the possibility to manage className and style for each part."]}),"\n",(0,r.jsx)(n.p,{children:"The component will accept the following props:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"shadow"}),": if you want to show a shadow under the map."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Creating the file and adding the source code for the component."}),"\n",(0,r.jsxs)(u,{groupId:"js-ts",children:[(0,r.jsx)(m,{value:"js",label:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d,{name:"javascript",size:"24"})," "]}),children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:"title='\\src\\components\\Card\\index.js'",children:"import React, {CSSProperties} from 'react'; // CSSProperties allows inline styling with better type checking.\nimport clsx from 'clsx'; // clsx helps manage conditional className names in a clean and concise manner.\n\nconst Card = ({\n    className, // classNamees for the container card\n    style, // Custom styles for the container card\n    children, // for include others parts in\n    shadow, // for add shadow under your card Shadow levels: low (lw), medium (md), top-level (tl)\n}) => {\n    const cardShadow = shadow\n        ? `item shadow--${shadow}`\n        : '';\n    return (\n        <div className=\"card-demo\">\n            <div className={clsx(\"card\", className, cardShadow)} style={style}>\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n"})})}),(0,r.jsx)(m,{value:"ts",label:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d,{name:"typescript-icon",size:"24"})," "]}),children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",metastring:"title='\\src\\components\\Card\\index.tsx'",children:"import React, {CSSProperties, ReactNode} from 'react'; // Import types for props\nimport clsx from 'clsx'; // clsx helps manage conditional className names in a clean and concise manner.\n\n// Define an interface for the component props\ninterface CardProps {\n    className?: string; // Optional className names for the container card\n    style?: CSSProperties; // Optional custom styles for the container card\n    children: ReactNode; // Content to be included within the card\n    shadow?: 'lw' | 'md' | 'tl'; // Optional shadow levels: low (lw), medium (md), top-level (tl)\n}\n\n// Build the card component with the specified props\nconst Card: React.FC<CardProps> = ({\n    className, // classNamees for the container card\n    style, // Custom styles for the container card\n    children, // Content to be included within the card\n    shadow, // for add shadow under your card Shadow levels: low (lw), medium (md), top-level (tl)\n}) => {\n    const cardShadow = shadow\n        ? `item shadow--${shadow}`\n        : '';\n    return (<div className = \"card-demo\" > <div className = {\n        clsx(\"card\", className, cardShadow)\n    }\n    style = {\n        style\n    } > {\n        children\n    }</div></div>);\n};\n\nexport default Card;\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"creating-the-cardheader-component",children:"Creating the CardHeader component"}),"\n",(0,r.jsx)(n.p,{children:"Think of this component as the header of your future cards. Create the file and add the source code for the component. The component will accept the following props:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"textAlign"}),": The option for text alignment ",(0,r.jsx)(n.code,{children:"left"})," ",(0,r.jsx)(n.code,{children:"right"})," ",(0,r.jsx)(n.code,{children:"center"})," ",(0,r.jsx)(n.code,{children:"justify"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"variant"}),": (optional)This will be used to apply different colors to the text based on the Infima CSS utility classNamees. The default value is primary."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"italic"}),": Default value is false, it's for italic text render"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"noDecoration"}),": Default value is false, it's for delete text decoration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"transform"}),": The option for transform text to ",(0,r.jsx)(n.code,{children:"UPPERCASE TEXT"})," ",(0,r.jsx)(n.code,{children:"lowercase text"})," or ",(0,r.jsx)(n.code,{children:"Capitalize Text"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"truncate"}),": The option is for very long text that will be truncated if there is not enough space to display it in a single line on the screen.  It's truncated by adding \u2026"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"weight"}),": The option for text weight ",(0,r.jsx)(n.code,{children:"Bold"})," ",(0,r.jsx)(n.code,{children:"Semibold"})," ",(0,r.jsx)(n.code,{children:"Normal"})," ",(0,r.jsx)(n.code,{children:"Light"})]}),"\n"]}),"\n",(0,r.jsxs)(u,{groupId:"js-ts",children:[(0,r.jsx)(m,{value:"js",label:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d,{name:"javascript",size:"24"})," "]}),children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:"title='\\src\\components\\Card\\CardHeader\\index.js'",children:"import React, {CSSProperties} from 'react'; // CSSProperties allows inline styling with better type checking.\nimport clsx from 'clsx'; // clsx helps manage conditional className names in a clean and concise manner.\nimport styles from '../styles.module.css';\n\nconst CardHeader = ({\n    className, // classNamees for the container card\n    style, // Custom styles for the container card\n    children, // Content to be included within the card\n    textAlign,\n    variant,\n    italic = false,\n    noDecoration = false,\n    transform,\n    truncate = false,\n    weight\n}) => {\n    const text = textAlign\n        ? `text--${textAlign}`\n        : '';\n    const textColor = variant\n        ? `text--${variant}`\n        : '';\n    const textItalic = italic\n        ? 'text--italic'\n        : '';\n    const textDecoration = noDecoration\n        ? 'text-no-decoration'\n        : '';\n    const textType = transform\n        ? `text--${transform}`\n        : '';\n    const textTruncate = truncate\n        ? styles.truncate\n        : '';\n    const textWeight = weight\n        ? `text--${weight}`\n        : '';\n    return (\n        <div\n            className={clsx(\n                'card__header',\n                className,\n                text,\n                textType,\n                textColor,\n                textItalic,\n                textDecoration,\n                textTruncate,\n                textWeight\n            )}\n            style={style}>\n\n            {children}\n        </div>\n    );\n}\n\nexport default CardHeader;\n\n"})})}),(0,r.jsx)(m,{value:"ts",label:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d,{name:"typescript-icon",size:"24"})," "]}),children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",metastring:"title='\\src\\components\\Card\\CardHeader\\index.tsx'",children:"import React, {CSSProperties, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport styles from '../styles.module.css';\n\ninterface CardHeaderProps {\n    className?: string;\n    style?: CSSProperties;\n    children: ReactNode;\n    textAlign?: string;\n    variant?: string;\n    italic?: boolean;\n    noDecoration?: boolean;\n    transform?: string;\n    truncate?: boolean;\n    weight?: string;\n}\n\nconst CardHeader: React.FC<CardHeaderProps> = ({\n    className,\n    style,\n    children,\n    textAlign,\n    variant,\n    italic = false,\n    noDecoration = false,\n    transform,\n    truncate = false,\n    weight\n}) => {\n    const text = textAlign\n        ? `text--${textAlign}`\n        : '';\n    const textColor = variant\n        ? `text--${variant}`\n        : '';\n    const textItalic = italic\n        ? 'text--italic'\n        : '';\n    const textDecoration = noDecoration\n        ? 'text-no-decoration'\n        : '';\n    const textType = transform\n        ? `text--${transform}`\n        : '';\n    const textTruncate = truncate\n        ? styles.truncate\n        : '';\n    const textWeight = weight\n        ? `text--${weight}`\n        : '';\n\n    return (<div className = {\n        clsx(\n            'card__header',\n            className,\n            text,\n            textType,\n            textColor,\n            textItalic,\n            textDecoration,\n            textTruncate,\n            textWeight\n        )\n    }\n    style = {\n        style\n    } > {\n        children\n    }</div>);\n};\n\nexport default CardHeader;\n\n\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"creating-the-cardbody-component",children:"Creating the CardBody component"}),"\n",(0,r.jsx)(n.p,{children:"Think of this component as the body of your futurs cards. Creating the file and adding the source code for the component.The component will accept the following props:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"textAlign"}),": The option for text alignment ",(0,r.jsx)(n.code,{children:"left"})," ",(0,r.jsx)(n.code,{children:"right"})," ",(0,r.jsx)(n.code,{children:"center"})," ",(0,r.jsx)(n.code,{children:"justify"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"variant"}),": (optional)This will be used to apply different colors to the text based on the Infima CSS utility classNamees. The default value is primary."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"italic"}),": Default value is false, it's for italic text render"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"noDecoration"}),": Default value is false, it's for delete text decoration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"transform"}),": The option for transform text to ",(0,r.jsx)(n.code,{children:"UPPERCASE TEXT"})," ",(0,r.jsx)(n.code,{children:"lowercase text"})," or ",(0,r.jsx)(n.code,{children:"Capitalize Text"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"truncate"}),": The option is for very long text that will be truncated if there is not enough space to display it in a single line on the screen.  It's truncated by adding \u2026"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"weight"}),": The option for text weight ",(0,r.jsx)(n.code,{children:"Bold"})," ",(0,r.jsx)(n.code,{children:"Semibold"})," ",(0,r.jsx)(n.code,{children:"Normal"})," ",(0,r.jsx)(n.code,{children:"Light"})]}),"\n"]}),"\n",(0,r.jsxs)(u,{groupId:"js-ts",children:[(0,r.jsx)(m,{value:"js",label:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d,{name:"javascript",size:"24"})," "]}),children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:"title='\\src\\components\\Card\\CardBody\\index.js'",children:"import React, {CSSProperties} from 'react';\nimport clsx from 'clsx';\nimport styles from '../styles.module.css';\n\nconst CardBody = ({\n    className, // classNamees for the container card\n    style, // Custom styles for the container card\n    children, // Content to be included within the card\n    textAlign,\n    variant,\n    italic = false,\n    noDecoration = false,\n    transform,\n    truncate = false,\n    weight\n}) => {\n    const text = textAlign\n        ? `text--${textAlign}`\n        : '';\n    const textColor = variant\n        ? `text--${variant}`\n        : '';\n    const textItalic = italic\n        ? 'text--italic'\n        : '';\n    const textDecoration = noDecoration\n        ? 'text-no-decoration'\n        : '';\n    const textType = transform\n        ? `text--${transform}`\n        : '';\n    const textTruncate = truncate\n        ? styles.truncate\n        : '';\n    const textWeight = weight\n        ? `text--${weight}`\n        : '';\n    return (\n        <div\n            className={clsx(\n                'card__body',\n                className,\n                text,\n                textType,\n                textColor,\n                textItalic,\n                textDecoration,\n                textTruncate,\n                textWeight\n            )}\n            style={style}>\n            {children}\n        </div>\n    );\n}\n\nexport default CardBody;\n\n\n"})})}),(0,r.jsx)(m,{value:"ts",label:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d,{name:"typescript-icon",size:"24"})," "]}),children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",metastring:"title='\\src\\components\\Card\\CardBody\\index.tsx'",children:"import React, {CSSProperties, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport styles from '../styles.module.css';\n\ninterface CardBodyProps {\n    className?: string;\n    style?: CSSProperties;\n    children: ReactNode;\n    textAlign?: string;\n    variant?: string;\n    italic?: boolean;\n    noDecoration?: boolean;\n    transform?: string;\n    truncate?: boolean;\n    weight?: string;\n}\n\nconst CardBody: React.FC<CardBodyProps> = ({\n    className,\n    style,\n    children,\n    textAlign,\n    variant,\n    italic = false,\n    noDecoration = false,\n    transform,\n    truncate = false,\n    weight\n}) => {\n    const text = textAlign\n        ? `text--${textAlign}`\n        : '';\n    const textColor = variant\n        ? `text--${variant}`\n        : '';\n    const textItalic = italic\n        ? 'text--italic'\n        : '';\n    const textDecoration = noDecoration\n        ? 'text-no-decoration'\n        : '';\n    const textType = transform\n        ? `text--${transform}`\n        : '';\n    const textTruncate = truncate\n        ? styles.truncate\n        : '';\n    const textWeight = weight\n        ? `text--${weight}`\n        : '';\n\n    return (<div className = {\n        clsx(\n            'card__body',\n            className,\n            text,\n            textType,\n            textColor,\n            textItalic,\n            textDecoration,\n            textTruncate,\n            textWeight\n        )\n    }\n    style = {\n        style\n    } > {\n        children\n    }</div>);\n};\n\nexport default CardBody;\n\n\n\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"creating-the-cardimage-component",children:"Creating the CardImage component"}),"\n",(0,r.jsxs)(n.p,{children:["Think of this component as the image cover of your futurs cards. Creating the file and adding the source code for the component.\nThis component is optionnal, you can use image html and add ",(0,r.jsx)(n.code,{children:'className={clsx("card__image")}'})]}),"\n",(0,r.jsxs)(u,{groupId:"js-ts",children:[(0,r.jsx)(m,{value:"js",label:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d,{name:"javascript",size:"24"})," "]}),children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:"title='\\src\\components\\Card\\CardImage\\index.js'",children:"import React, {CSSProperties} from 'react';\nimport clsx from 'clsx';\nimport useBaseUrl from '@docusaurus/useBaseUrl'; // Import the useBaseUrl function from Docusaurus\n\nconst CardImage = ({className, style, cardImageUrl, alt, title}) => {\n\n    const generatedCardImageUrl = useBaseUrl(cardImageUrl);\n\n    return (\n\n        <img\n            className={clsx(\"card__image\", className)}\n            style={style}\n            src={generatedCardImageUrl}\n            alt={alt}\n            title={title}/>\n\n    );\n}\n\nexport default CardImage;\n\n\n\n"})})}),(0,r.jsx)(m,{value:"ts",label:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d,{name:"typescript-icon",size:"24"})," "]}),children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",metastring:"title='\\src\\components\\Card\\CardImage\\index.tsx'",children:"import React, {CSSProperties} from 'react';\nimport clsx from 'clsx';\nimport useBaseUrl from '@docusaurus/useBaseUrl';\n\ninterface CardImageProps {\n    className?: string;\n    style?: CSSProperties;\n    cardImageUrl: string;\n    alt: string;\n    title: string;\n}\n\nconst CardImage: React.FC<CardImageProps> = (\n    {className, style, cardImageUrl, alt, title}\n) => {\n    const generatedCardImageUrl = useBaseUrl(cardImageUrl);\n\n    return (< img className = {\n        clsx(\"card__image\", className)\n    }\n    style = {\n        style\n    }\n    src = {\n        generatedCardImageUrl\n    }\n    alt = {\n        alt\n    }\n    title = {\n        title\n    } />);\n};\n\nexport default CardImage;\n\n\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"creating-the-cardfooter-component",children:"Creating the CardFooter component"}),"\n",(0,r.jsx)(n.p,{children:"Think of this component as the Footer of your futurs cards. Creating the file and adding the source code for the component.The component will accept the following props:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"textAlign"}),": The option for text alignment ",(0,r.jsx)(n.code,{children:"left"})," ",(0,r.jsx)(n.code,{children:"right"})," ",(0,r.jsx)(n.code,{children:"center"})," ",(0,r.jsx)(n.code,{children:"justify"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"variant"}),": (optional)This will be used to apply different colors to the text based on the Infima CSS utility classNamees. The default value is primary."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"italic"}),": Default value is false, it's for italic text render"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"noDecoration"}),": Default value is false, it's for delete text decoration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"transform"}),": The option for transform text to ",(0,r.jsx)(n.code,{children:"UPPERCASE TEXT"})," ",(0,r.jsx)(n.code,{children:"lowercase text"})," or ",(0,r.jsx)(n.code,{children:"Capitalize Text"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"truncate"}),": The option is for very long text that will be truncated if there is not enough space to display it in a single line on the screen.  It's truncated by adding \u2026"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"weight"}),": The option for text weight ",(0,r.jsx)(n.code,{children:"Bold"})," ",(0,r.jsx)(n.code,{children:"Semibold"})," ",(0,r.jsx)(n.code,{children:"Normal"})," ",(0,r.jsx)(n.code,{children:"Light"})]}),"\n"]}),"\n",(0,r.jsxs)(u,{groupId:"js-ts",children:[(0,r.jsx)(m,{value:"js",label:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d,{name:"javascript",size:"24"})," "]}),children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:"title='\\src\\components\\Card\\CardFooter\\index.js'",children:"import React, {CSSProperties} from 'react';\nimport clsx from 'clsx';\nimport styles from '../styles.module.css';\n\nconst CardFooter = ({\n    className,\n    style,\n    children,\n    textAlign,\n    variant,\n    italic = false,\n    noDecoration = false,\n    transform,\n    truncate = false,\n    weight\n}) => {\n    const text = textAlign\n        ? `text--${textAlign}`\n        : '';\n    const textColor = variant\n        ? `text--${variant}`\n        : '';\n    const textItalic = italic\n        ? 'text--italic'\n        : '';\n    const textDecoration = noDecoration\n        ? 'text-no-decoration'\n        : '';\n    const textType = transform\n        ? `text--${transform}`\n        : '';\n    const textTruncate = truncate\n        ? styles.truncate\n        : '';\n    const textWeight = weight\n        ? `text--${weight}`\n        : '';\n    return (\n        <div\n            className={clsx(\n                'card__footer',\n                className,\n                text,\n                textType,\n                textColor,\n                textItalic,\n                textDecoration,\n                textTruncate,\n                textWeight\n            )}\n            style={style}>\n            {children}\n        </div>\n    );\n}\n\nexport default CardFooter;\n\n\n"})})}),(0,r.jsx)(m,{value:"ts",label:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d,{name:"typescript-icon",size:"24"})," "]}),children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",metastring:"title='\\src\\components\\Card\\CardFooter\\index.tsx'",children:"import React, {CSSProperties, ReactNode} from 'react';\nimport clsx from 'clsx';\nimport styles from '../styles.module.css';\n\ninterface CardFooterProps {\n    className?: string;\n    style?: CSSProperties;\n    children: ReactNode;\n    textAlign?: string;\n    variant?: string;\n    italic?: boolean;\n    noDecoration?: boolean;\n    transform?: string;\n    truncate?: boolean;\n    weight?: string;\n}\n\nconst CardFooter: React.FC<CardFooterProps> = ({\n    className,\n    style,\n    children,\n    textAlign,\n    variant,\n    italic = false,\n    noDecoration = false,\n    transform,\n    truncate = false,\n    weight\n}) => {\n    const text = textAlign\n        ? `text--${textAlign}`\n        : '';\n    const textColor = variant\n        ? `text--${variant}`\n        : '';\n    const textItalic = italic\n        ? 'text--italic'\n        : '';\n    const textDecoration = noDecoration\n        ? 'text-no-decoration'\n        : '';\n    const textType = transform\n        ? `text--${transform}`\n        : '';\n    const textTruncate = truncate\n        ? styles.truncate\n        : '';\n    const textWeight = weight\n        ? `text--${weight}`\n        : '';\n\n    return (<div className = {\n        clsx(\n            'card__footer',\n            className,\n            text,\n            textType,\n            textColor,\n            textItalic,\n            textDecoration,\n            textTruncate,\n            textWeight\n        )\n    }\n    style = {\n        style\n    } > {\n        children\n    }</div>);\n};\n\nexport default CardFooter;\n\n\n\n\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"mdx-component-scope",children:"MDX Component Scope"}),"\n",(0,r.jsxs)(n.p,{children:["To follow the Docusaurus documentation, we create a theme folder that will host the ",(0,r.jsx)(n.code,{children:"MDXComponents"})," file. This gives us ",(0,r.jsx)(n.code,{children:"src\\theme\\MDXComponents.*"}),". You may already have a ",(0,r.jsx)(n.code,{children:"src\\theme"})," folder or an ",(0,r.jsx)(n.code,{children:"MDXComponents"})," file if so - merge the changes described here with yours."]}),"\n",(0,r.jsxs)(u,{groupId:"js-ts",children:[(0,r.jsx)(m,{value:"js",label:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d,{name:"javascript",size:"24"})," "]}),children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-javascript",metastring:'title="src\\theme\\MDXComponents.js"',children:" import React from 'react';\n// Importing the original mapper + our components according to the Docusaurus\n// doc\nimport MDXComponents from '@theme-original/MDXComponents';\nimport Card from '@site/src/components/Card/Card';\nimport CardBody from '@site/src/components/Card/CardBody';\nimport CardFooter from '@site/src/components/Card/CardFooter';\nimport CardHeader from '@site/src/components/Card/CardHeader';\nimport CardImage from '@site/src/components/Card/CardImage';\n\nexport default {\n// Reusing the default mapping\n...MDXComponents,\nCard,\nCardHeader,\nCardBody,\nCardFooter,\nCardImage\n};\n"})})}),(0,r.jsx)(m,{value:"ts",label:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d,{name:"typescript-icon",size:"24"})," "]}),children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",metastring:'title="src\\theme\\MDXComponents.tsx"',children:"\nimport React from 'react';\n// Importing the original mapper + our components according to the Docusaurus\n// doc\nimport MDXComponents from '@theme-original/MDXComponents';\nimport Card from '@site/src/components/Card/Card';\nimport CardBody from '@site/src/components/Card/CardBody';\nimport CardFooter from '@site/src/components/Card/CardFooter';\nimport CardHeader from '@site/src/components/Card/CardHeader';\nimport CardImage from '@site/src/components/Card/CardImage';\n\nexport default {\n// Reusing the default mapping\n...MDXComponents,\nCard,\nCardHeader,\nCardBody,\nCardFooter,\nCardImage\n};\n"})})})]}),"\n",(0,r.jsx)(n.h2,{id:"using-the-cards-component-in-an-mdx-file",children:"Using the Cards Component in an MDX File"}),"\n",(0,r.jsx)(n.h3,{id:"basic-card",children:"Basic card"}),"\n",(0,r.jsx)("div",{className:"container ",children:(0,r.jsxs)("div",{className:"row ",children:[(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(a,{shadow:"tl margin-bottom--lg",children:[(0,r.jsx)(c,{children:(0,r.jsx)("h3",{children:"Lorem Ipsum"})}),(0,r.jsx)(o,{children:(0,r.jsx)(n.p,{children:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\ntempor incididunt ut labore et dolore magna aliqua. Quis ipsum\nsuspendisse ultrices gravida."})}),(0,r.jsx)(i,{children:(0,r.jsx)("button",{className:"button button--secondary button--block",children:"See All"})})]})})}),(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:"<Card shadow='tl'>\n  <CardHeader >\n      <h3>Lorem Ipsum</h3>\n  </CardHeader>\n\n  <CardBody>\n      Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\n      incididunt ut labore et dolore magna aliqua. Quis ipsum suspendisse ultrices\n      gravida.\n  </CardBody>\n\n  <CardFooter>\n\n      <button className=\"button button--secondary button--block\">See All</button>\n\n  </CardFooter>\n\n</Card>\n"})})})}),(0,r.jsx)(n.h3,{id:"feed-card",children:"Feed card"}),(0,r.jsx)("div",{className:"container ",children:(0,r.jsxs)("div",{className:"row padding-bottom--xl",children:[(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(a,{className:"margin-bottom--lg",children:[(0,r.jsx)(c,{style:{backgroundColor:"#205d3b",color:"black"},children:(0,r.jsxs)("div",{className:"avatar avatar--vertical",children:[(0,r.jsx)("img",{className:"avatar__photo avatar__photo--xl",src:"https://avatars.githubusercontent.com/u/97809069?v=4"}),(0,r.jsxs)("div",{className:"avatar__intro",children:[(0,r.jsx)("div",{className:"avatar__name",children:"Docux"}),(0,r.jsx)("small",{className:"avatar__subtitle",children:(0,r.jsxs)(n.p,{children:["Curious explorer, a bit of a mad experimenter, and a bit of a contributor.\n",(0,r.jsx)("a",{style:{color:"white"},href:"https://docuxlab.com/",children:"@docuxlab.com"})]})})]})]})}),(0,r.jsxs)(o,{style:{backgroundColor:"black",color:"silver"},className:"padding-vert--md",textAlign:"center",Transform:"uppercase",children:[(0,r.jsx)("h3",{children:"Docux Card component"}),(0,r.jsx)(n.p,{children:"Welcome to DocuxLab, your space for tech discoveries, development tutorials, and tips to enhance your digital projects. Here, we break down code, explore web trends, and share practical resources for all tech enthusiasts."}),(0,r.jsx)(n.p,{children:"Explore our articles, guides, and interactive demos designed to help you stay at the forefront of innovation. Whether you are a beginner developer or an experienced pro, DocuxLab is here to inspire and support you in your digital projects."})]}),(0,r.jsx)(i,{style:{backgroundColor:"#205d3b",color:"black"},className:"text--center",children:(0,r.jsxs)("div",{className:"button-group button-group--block",children:[(0,r.jsx)("button",{className:"button button--secondary button--sm",children:"Like"}),(0,r.jsx)("button",{className:"button button--secondary button--sm",children:"Comment"}),(0,r.jsx)("button",{className:"button button--secondary button--sm",children:"Share"})]})})]})})}),(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<Card className=\'margin-bottom--lg\'>\n  <CardHeader style={{ backgroundColor: \'#205d3b\' , color:\'black\'} }>\n      <div className="avatar avatar--vertical">\n          <img\n              className="avatar__photo avatar__photo--xl"\n              src="https://avatars.githubusercontent.com/u/97809069?v=4"/>\n          <div className="avatar__intro">\n              <div className="avatar__name">Docux</div>\n              <small className="avatar__subtitle">\n                  Curious explorer, a bit of a mad experimenter, and a bit of a contributor.\n                  <a style={{ color:\'white\'} } href="https://docuxlab.com/">@docuxlab.com</a>\n              </small>\n          </div>\n      </div>\n  </CardHeader>\n  <CardBody\n      style={{ backgroundColor: \'black\' , color:\'silver\'}}\n      className="padding-vert--md"\n      textAlign=\'center\'\n      Transform=\'uppercase\'>\n      <h3>Docux Card component</h3>\n\n      Welcome to DocuxLab, your space for tech discoveries, development tutorials, and\n      tips to enhance your digital projects. Here, we break down code, explore web\n      trends, and share practical resources for all tech enthusiasts. Explore our\n      articles, guides, and interactive demos designed to help you stay at the\n      forefront of innovation. Whether you are a beginner developer or an experienced\n      pro, DocuxLab is here to inspire and support you in your digital projects.\n  </CardBody>\n\n  <CardFooter\n      style={{ backgroundColor: \'#205d3b\' , color:\'black\'}}\n      className=\'text--center\'>\n      <div className="button-group button-group--block">\n          <button className="button button--secondary button--sm">Like</button>\n          <button className="button button--secondary button--sm">Comment</button>\n          <button className="button button--secondary button--sm">Share</button>\n      </div>\n  </CardFooter>\n\n</Card>\n'})})})})]})}),(0,r.jsx)(n.h3,{id:"mega-feed-card",children:"Mega Feed card"}),(0,r.jsx)("div",{className:"container",children:(0,r.jsxs)("div",{className:"row padding-bottom--xl",children:[(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(a,{className:"margin-bottom--lg",children:[(0,r.jsx)(c,{className:"padding-top--lg",style:{backgroundColor:"rgb(33 126 209)",color:"black"},children:(0,r.jsxs)("div",{className:"avatar avatar--vertical",children:[(0,r.jsx)("img",{className:"avatar__photo avatar__photo--xl",src:"https://avatars.githubusercontent.com/u/97809069?v=4"}),(0,r.jsxs)("div",{className:"avatar__intro",children:[(0,r.jsx)("div",{className:"avatar__name",children:"Docux"}),(0,r.jsx)("small",{className:"avatar__subtitle",children:(0,r.jsxs)(n.p,{children:["Curious explorer, a bit of a mad experimenter, and a bit of a contributor.\n",(0,r.jsx)("a",{style:{color:"white"},href:"https://docuxlab.com/",children:"@docuxlab.com"})]})})]})]})}),(0,r.jsx)(l,{style:{backgroundColor:"rgb(33 126 209)",color:"black"},cardImageUrl:"/img/learn-docker-in-avonture-blog.webp"}),(0,r.jsxs)(o,{style:{backgroundColor:"#fefacb",color:"#8f600b"},className:"padding-vert--md",textAlign:"center",Transform:"uppercase",children:[(0,r.jsx)("h3",{children:"New Discovery"}),(0,r.jsxs)(n.p,{children:["Amazing discovery! I've found an incredible website: ",(0,r.jsx)(n.a,{href:"https://www.avonture.be/",children:"avonture.be"}),". This comprehensive resource offers in-depth tutorials, practical examples, and expert insights into various development topics."]})]}),(0,r.jsx)(i,{style:{backgroundColor:"#2887bf",color:"black"},className:"text--center",children:(0,r.jsxs)("div",{className:"button-group button-group--block",children:[(0,r.jsx)("button",{className:"button button--secondary button--sm",children:"Like"}),(0,r.jsx)("button",{className:"button button--secondary button--sm",children:"Comment"}),(0,r.jsx)("button",{className:"button button--secondary button--sm",children:"Share"})]})})]})})}),(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:"<Card>\n  <CardHeader\n      className='padding-top--lg'\n      style={{ backgroundColor: 'rgb(33 126 209)' , color:'black'}}>\n      <div className=\"avatar avatar--vertical\">\n          <img\n              className=\"avatar__photo avatar__photo--xl\"\n              src=\"https://avatars.githubusercontent.com/u/97809069?v=4\"/>\n          <div className=\"avatar__intro\">\n              <div className=\"avatar__name\">Docux</div>\n              <small className=\"avatar__subtitle\">\n                  Curious explorer, a bit of a mad experimenter, and a bit of a contributor.\n                  <a style={{ color:'white'} } href=\"https://docuxlab.com/\">@docuxlab.com</a>\n              </small>\n          </div>\n      </div>\n  </CardHeader>\n\n  <CardImage\n      style={{ backgroundColor: 'rgb(33 126 209)' , color:'black'}}\n      cardImageUrl=\"/img/learn-docker-in-avonture-blog.webp\"/>\n\n  <CardBody\n      style={{ backgroundColor: '#fefacb' , color:'#8f600b'}}\n      className=\"padding-vert--md\"\n      textAlign='center'\n      Transform='uppercase'>\n      <h3>New feature</h3>\n\n      Amazing discovery! I've found an incredible website:\n      [avonture.be](https://www.avonture.be/). This comprehensive resource offers\n      in-depth tutorials, practical examples, and expert insights into various\n      development topics.\n\n  </CardBody>\n\n  <CardFooter\n      style={{ backgroundColor: '#2887bf' , color:'black'}}\n      className='text--center'>\n      <div className=\"button-group button-group--block\">\n          <button className=\"button button--secondary button--sm\">Like</button>\n          <button className=\"button button--secondary button--sm\">Comment</button>\n          <button className=\"button button--secondary button--sm\">Share</button>\n      </div>\n  </CardFooter>\n\n</Card>\n\n"})})})})]})}),(0,r.jsx)(n.h3,{id:"photo-card",children:"Photo card"}),(0,r.jsx)("div",{className:"container",children:(0,r.jsxs)("div",{className:"row padding-bottom--xl",children:[(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(a,{className:"margin-bottom--lg",children:[(0,r.jsx)(l,{cardImageUrl:"/img/docux.webp"}),(0,r.jsx)(i,{style:{backgroundColor:"#07ac2aff",color:"#eeff00ff"},className:"text--center",children:(0,r.jsxs)("div",{className:"button-group button-group--block",children:[(0,r.jsx)("button",{className:"button button--primary button--sm",children:"Like"}),(0,r.jsx)("button",{className:"button button--secondary button--sm",children:"Comment"}),(0,r.jsx)("button",{className:"button button--info button--sm",children:"Share"})]})})]})})}),(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:' <Card className=\'margin-bottom--lg\'>\n\n  <CardImage cardImageUrl="/img/docux.webp"/>\n\n  <CardFooter\n      style={{ backgroundColor: \'#07ac2aff\' , color:\'#eeff00ff\' }}\n      className=\'text--center\'>\n      <div className="button-group button-group--block">\n          <button className="button button--primary button--sm">Like</button>\n          <button className="button button--secondary button--sm">Comment</button>\n          <button className="button button--info button--sm">Share</button>\n      </div>\n  </CardFooter>\n\n</Card>\n'})})})})]})}),(0,r.jsx)(n.h3,{id:"photo-card-avatar",children:"Photo card Avatar"}),(0,r.jsx)("div",{className:"container",children:(0,r.jsxs)("div",{className:"row padding-bottom--xl",children:[(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(a,{className:"margin-bottom--lg",children:[(0,r.jsx)(l,{cardImageUrl:"/img/learn-docusaurus-and-react.webp"}),(0,r.jsx)(i,{style:{backgroundColor:"white",color:"black"},className:"text--center",children:(0,r.jsxs)("div",{className:"avatar",children:[(0,r.jsx)("img",{className:"avatar__photo avatar__photo--xs",src:"https://avatars.githubusercontent.com/u/97809069?v=4"}),(0,r.jsx)("div",{className:"avatar__intro",children:(0,r.jsx)("div",{className:"avatar__name",children:"Learn Docusaurus"})})]})})]})})}),(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:' <Card className=\'margin-bottom--lg\'>\n\n  <CardImage cardImageUrl="/img/learn-docusaurus-and-react.webp"/>\n\n  <CardFooter\n      style={{ backgroundColor: \'white\' , color:\'black\'}}\n      className=\'text--center\'>\n      <div className="avatar">\n          <img\n              className="avatar__photo avatar__photo--xs"\n              src="https://avatars.githubusercontent.com/u/97809069?v=4"/>\n          <div className="avatar__intro">\n              <div className="avatar__name">Learn Docusaurus</div>\n\n          </div>\n      </div>\n\n  </CardFooter>\n\n</Card>\n\n'})})})})]})}),(0,r.jsx)(n.h3,{id:"other-post-card",children:"Other Post card"}),(0,r.jsx)("div",{className:"container",children:(0,r.jsxs)("div",{className:"row ",children:[(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(a,{shadow:"tl margin-bottom--lg",children:[(0,r.jsx)(o,{style:{backgroundColor:"white",color:"black"},className:"padding-vert--md ",Transform:"uppercase",children:(0,r.jsx)(n.p,{children:"The Infima CSS  framework provides a set of utility classNames that can be used to style card in Docusaurus. This article will cover how to create a reusable card component for your Docusaurus site that can be customized with different colors and sizes."})}),(0,r.jsx)(i,{style:{backgroundColor:"#7a9f3d",color:"#d7de3d"},children:(0,r.jsxs)("div",{className:"avatar padding-top--md",children:[(0,r.jsx)("img",{className:"avatar__photo",src:"https://avatars.githubusercontent.com/u/97809069?v=4"}),(0,r.jsxs)("div",{className:"avatar__intro",children:[(0,r.jsx)("div",{className:"avatar__name",children:"Docux"}),(0,r.jsx)("small",{className:"avatar__subtitle",children:(0,r.jsx)(n.p,{children:"Curious explorer, a bit of a mad experimenter, and a bit of a contributor."})})]})]})})]})})}),(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<Card shadow=\'tl\'>\n    <CardBody\n        style={{ backgroundColor: \'white\' , color:\'black\'}}\n        className="padding-vert--md "\n        Transform=\'uppercase\'>\n        A must-visit site for developers looking to expand their knowledge and skills!\n    </CardBody>\n    <CardFooter style={{ backgroundColor: \'#7a9f3d\' , color:\'#d7de3d\'}}>\n\n        <div className="avatar padding-top--md">\n            <img\n                className="avatar__photo"\n                src="https://avatars.githubusercontent.com/u/97809069?v=4"/>\n            <div className="avatar__intro">\n                <div className="avatar__name">Docux</div>\n                <small className="avatar__subtitle">\n                    Curious explorer, a bit of a mad experimenter, and a bit of a contributor.\n                </small>\n            </div>\n        </div>\n    </CardFooter>\n</Card>\n'})})})})]})})]})}),"\n",(0,r.jsx)(n.h3,{id:"multi-demo-card",children:"Multi demo card"}),"\n",(0,r.jsx)("div",{className:"container",children:(0,r.jsxs)("div",{className:"row padding-bottom--xl",children:[(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(a,{className:"margin-bottom--lg",children:[(0,r.jsx)(c,{className:"padding-top--lg",style:{backgroundColor:"#87dfb8",color:"#2d2f4eff"},children:(0,r.jsxs)("div",{className:"avatar avatar--vertical",children:[(0,r.jsx)("img",{className:"avatar__photo avatar__photo--xs",src:"https://avatars.githubusercontent.com/u/97809069?v=4"}),(0,r.jsxs)("div",{className:"avatar__intro",children:[(0,r.jsx)("div",{className:"avatar__name",children:"Docux"}),(0,r.jsx)("small",{className:"avatar__subtitle",children:(0,r.jsxs)(n.p,{children:["Curious explorer, a bit of a mad experimenter, and a bit of a contributor.\n",(0,r.jsx)("a",{href:"https://docuxlab.com/",style:{color:"#1a8870"},children:"@docuxlab.com"})]})})]})]})}),(0,r.jsx)(l,{style:{backgroundColor:"#87dfb8",color:"#2d2f4eff"},cardImageUrl:"/img/docux-and-christophe-learn-docusaurus.webp"}),(0,r.jsx)(o,{style:{backgroundColor:"#87dfb8",color:"#2d2f4eff"},className:"padding-vert--md",textAlign:"right",Transform:"uppercase",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)("h3",{children:"DocuxLab"}),"\nA must-visit site for developers looking to expand their knowledge and skills!"]})})]})})}),(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(a,{className:"margin-bottom--lg",children:[(0,r.jsx)(c,{className:"padding-top--lg",style:{backgroundColor:"#7a9f3d",color:"black"},children:(0,r.jsxs)("div",{className:"avatar",children:[(0,r.jsx)("img",{className:"avatar__photo avatar__photo--lg",src:"https://avatars.githubusercontent.com/u/97809069?v=4"}),(0,r.jsxs)("div",{className:"avatar__intro",children:[(0,r.jsx)("div",{className:"avatar__name",children:"Docux"}),(0,r.jsx)("small",{className:"avatar__subtitle",children:(0,r.jsxs)(n.p,{children:["Curious explorer, a bit of a mad experimenter, and a bit of a contributor.\n",(0,r.jsx)("a",{style:{color:"white"},href:"https://docuxlab.com/",children:"@docuxlab.com"})]})})]})]})}),(0,r.jsx)(l,{style:{backgroundColor:"#7a9f3d",color:"#d7de3d"},cardImageUrl:"/img/docux-and-christophe-learn-docusaurus.webp"}),(0,r.jsx)(o,{style:{backgroundColor:"#d7de3d",color:"#3d521cff"},className:"padding-vert--md",textAlign:"justify",Transform:"uppercase",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)("h3",{className:"text--center",children:"DocuxLab"}),"\nA must-visit site for developers looking to expand their knowledge and skills!"]})})]})})}),(0,r.jsx)("div",{className:"col col--6",children:(0,r.jsx)("div",{className:"",children:(0,r.jsxs)(a,{className:"margin-top--lg",children:[(0,r.jsx)(l,{style:{backgroundColor:"black",color:"black"},cardImageUrl:"/img/card-component-docusaurus-infima.webp"}),(0,r.jsxs)(o,{style:{backgroundColor:"#40c43b",color:"#3d521cff"},className:"padding-vert--md",textAlign:"center",Transform:"uppercase",children:[(0,r.jsx)("h3",{children:"Docux Card component"}),(0,r.jsx)(n.p,{children:"Welcome to DocuxLab, your space for tech discoveries, development tutorials, and tips to enhance your digital projects. Here, we break down code, explore web trends, and share practical resources for all tech enthusiasts. Explore our articles, guides, and interactive demos designed to help you stay at the forefront of innovation. Whether you are a beginner developer or an experienced pro, DocuxLab is here to inspire and support you in your digital projects."})]}),(0,r.jsx)(i,{style:{backgroundColor:"#d7de3d",color:"#3d521cff"},children:(0,r.jsxs)("div",{className:"avatar padding-top--md",children:[(0,r.jsx)("img",{className:"avatar__photo",src:"https://avatars.githubusercontent.com/u/97809069?v=4"}),(0,r.jsxs)("div",{className:"avatar__intro",children:[(0,r.jsx)("div",{className:"avatar__name",children:"Docux"}),(0,r.jsx)("small",{className:"avatar__subtitle",children:(0,r.jsx)(n.p,{children:"Curious explorer, a bit of a mad experimenter, and a bit of a contributor."})})]})]})})]})})})]})}),"\n",(0,r.jsx)(n.h2,{id:"why-truncate-in-stylesmodulecss",children:"Why truncate in styles.module.css"}),"\n",(0,r.jsxs)(n.p,{children:["The truncate functionality uses CSS Modules to provide better encapsulation and avoid conflicts with global styles. Here's a detailed breakdown of how the ",(0,r.jsx)(n.code,{children:".truncate p"})," CSS works:"]}),"\n",(0,r.jsxs)(u,{groupId:"css-scss",children:[(0,r.jsx)(m,{value:"css",label:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d,{name:"css-3",size:"24"})," "]}),children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-css",metastring:"title='\\src\\components\\Card\\styles.module.css'",children:".truncate p {\n  display: -webkit-box;\n  -webkit-line-clamp: 3;\n  line-clamp: 3;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  margin-bottom: 0;\n  word-wrap: break-word;\n  max-height: 4.5em; /* 3 lines \xd7 1.5em line-height */\n  line-height: 1.5em;\n}\n"})})}),(0,r.jsx)(m,{value:"scss",label:(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(d,{name:"sass",size:"24"})," "]}),children:(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-scss",metastring:'title="\\src\\components\\Card\\styles.module.scss"',children:".truncate {\np {\ndisplay: -webkit-box;\n-webkit-line-clamp: 3;\nline-clamp: 3;\n-webkit-box-orient: vertical;\noverflow: hidden;\ntext-overflow: ellipsis;\nmargin-bottom: 0;\nword-wrap: break-word;\nmax-height: 4.5em; /* 3 lines \xd7 1.5em line-height */\nline-height: 1.5em;\n}\n}\n"})})})]}),"\n",(0,r.jsx)(n.h3,{id:"detailed-css-properties-explanation",children:"Detailed CSS Properties Explanation:"}),"\n",(0,r.jsxs)(n.h4,{id:"1-display--webkit-box",children:["1. ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"display: -webkit-box;"})})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Enables the WebKit flexible box model (legacy syntax)"}),"\n",(0,r.jsxs)(n.li,{children:["Required for ",(0,r.jsx)(n.code,{children:"-webkit-line-clamp"})," to function properly"]}),"\n",(0,r.jsx)(n.li,{children:"Foundation of the multi-line truncation system"}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"2--webkit-line-clamp-3-and-line-clamp-3",children:["2. ",(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"-webkit-line-clamp: 3;"})," and ",(0,r.jsx)(n.code,{children:"line-clamp: 3;"})]})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Limits display to ",(0,r.jsx)(n.strong,{children:"3 lines maximum"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"-webkit-line-clamp"}),": WebKit version (Safari, Chrome)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"line-clamp"}),": Modern standard version"]}),"\n",(0,r.jsx)(n.li,{children:"Both included for cross-browser compatibility"}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"3--webkit-box-orient-vertical",children:["3. ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"-webkit-box-orient: vertical;"})})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Defines the orientation of "boxes" vertically'}),"\n",(0,r.jsx)(n.li,{children:"Specifies that lines stack vertically"}),"\n",(0,r.jsxs)(n.li,{children:["Mandatory when using ",(0,r.jsx)(n.code,{children:"-webkit-line-clamp"})]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"4-overflow-hidden",children:["4. ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"overflow: hidden;"})})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Hides any content that exceeds the container"}),"\n",(0,r.jsx)(n.li,{children:"Essential for concealing additional lines (beyond the 3rd)"}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"5-text-overflow-ellipsis",children:["5. ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"text-overflow: ellipsis;"})})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Adds ellipsis (",(0,r.jsx)(n.code,{children:"..."}),") at the end of truncated text"]}),"\n",(0,r.jsxs)(n.li,{children:["Only works with ",(0,r.jsx)(n.code,{children:"overflow: hidden"})]}),"\n",(0,r.jsx)(n.li,{children:'Provides the visual "..." effect'}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"6-margin-bottom-0",children:["6. ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"margin-bottom: 0;"})})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Removes bottom margin from paragraphs"}),"\n",(0,r.jsx)(n.li,{children:"Prevents unwanted spacing after truncated text"}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"7-word-wrap-break-word",children:["7. ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"word-wrap: break-word;"})})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Allows long words to break when necessary"}),"\n",(0,r.jsx)(n.li,{children:"Prevents words from overflowing container width"}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"8-max-height-45em-and-line-height-15em",children:["8. ",(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"max-height: 4.5em;"})," and ",(0,r.jsx)(n.code,{children:"line-height: 1.5em;"})]})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fallback"})," for browsers that don't support ",(0,r.jsx)(n.code,{children:"line-clamp"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"4.5em = 3 lines \xd7 1.5em"})," per line"]}),"\n",(0,r.jsxs)(n.li,{children:["Provides height limitation if ",(0,r.jsx)(n.code,{children:"line-clamp"})," fails"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"why-target-truncate-p",children:["Why Target ",(0,r.jsx)(n.code,{children:".truncate p"}),"?"]}),"\n",(0,r.jsxs)(n.p,{children:["The selector specifically targets ",(0,r.jsxs)(n.strong,{children:["paragraphs ",(0,r.jsx)(n.code,{children:"<p>"})]})," inside elements with the ",(0,r.jsx)(n.code,{children:".truncate"})," class. This approach provides:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Precision"}),": Only text content gets truncated"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Preservation"}),": Headings ",(0,r.jsx)(n.code,{children:"<h1>"}),", ",(0,r.jsx)(n.code,{children:"<h2>"}),", ",(0,r.jsx)(n.code,{children:"<h3>"})," remain intact"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flexibility"}),": You can have non-truncated content in the same CardBody"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"basic-example",children:"basic Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"<CardBody truncate> {/* = <true> */}\n  <h3>Complete Title</h3>  {/* \u2190 Not truncated */}\n  \n  <p>                      {/* \u2190 Will be truncated */}\n    Very long text that will be automatically \n    truncated after 3 lines with ellipsis \n    at the end...\n  </p>\n</CardBody>\n"})}),"\n",(0,r.jsxs)(a,{className:"margin-top--lg",children:[(0,r.jsx)(l,{style:{backgroundColor:"black",color:"black"},cardImageUrl:"/img/card-component-docusaurus-infima.webp"}),(0,r.jsxs)(o,{style:{backgroundColor:"#40c43b",color:"#3d521cff"},className:"padding-vert--md",textAlign:"center",Transform:"uppercase",truncate:!0,children:[(0,r.jsx)("h3",{children:"Docux Card component"}),(0,r.jsx)(n.p,{children:"Welcome to DocuxLab, your space for tech discoveries, development tutorials, and tips to enhance your digital projects. Here, we break down code, explore web trends, and share practical resources for all tech enthusiasts. Explore our articles, guides, and interactive demos designed to help you stay at the forefront of innovation. Whether you are a beginner developer or an experienced pro, DocuxLab is here to inspire and support you in your digital projects."})]}),(0,r.jsx)(i,{style:{backgroundColor:"#d7de3d",color:"#3d521cff"},children:(0,r.jsxs)("div",{className:"avatar padding-top--md padding-bott--md",children:[(0,r.jsx)("img",{className:"avatar__photo",src:"https://avatars.githubusercontent.com/u/97809069?v=4"}),(0,r.jsxs)("div",{className:"avatar__intro",children:[(0,r.jsx)("div",{className:"avatar__name",children:"Docux"}),(0,r.jsx)("small",{className:"avatar__subtitle",children:(0,r.jsx)(n.p,{children:"Curious explorer, a bit of a mad experimenter, and a bit of a contributor."})})]})]})})]}),"\n",(0,r.jsx)(n.p,{children:"This modern CSS technique provides effective multi-line truncation that works across different browsers and maintains clean, readable layouts in your card components."}),"\n",(0,r.jsx)(n.h2,{id:"tricks-and-tips",children:"Tricks and Tips"}),"\n",(0,r.jsxs)(n.p,{children:["The columns are made according to the infima grid, they are hard coded on this page so that the card component is independent. But if you want to use an easy and quick system for managing your columns while using the Infima grid system look at our component ",(0,r.jsx)(n.a,{href:"/blog/card-component-docusaurus-infima/",children:"Columns component"})]})]})}function m(e={}){let{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function h(e,n){throw Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},9596:(e,n,t)=>{t.d(n,{A:()=>a});let a=t.p+"assets/images/card-component-docusaurus-infima-af9658c6ae560daca05a19504bcb0cfd.webp"}}]);